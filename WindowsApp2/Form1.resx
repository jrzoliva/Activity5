<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        As4cPHiQ/h+WyaOlplWB4gAAAABJRU5ErkJggg==
</value>
  </data>
</root>